<?php
/*
+--------------------------------------------------------------------+
| CiviCRM version 4.7                                                |
+--------------------------------------------------------------------+
| Copyright CiviCRM LLC (c) 2004-2017                                |
+--------------------------------------------------------------------+
| This file is a part of CiviCRM.                                    |
|                                                                    |
| CiviCRM is free software; you can copy, modify, and distribute it  |
| under the terms of the GNU Affero General Public License           |
| Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
|                                                                    |
| CiviCRM is distributed in the hope that it will be useful, but     |
| WITHOUT ANY WARRANTY; without even the implied warranty of         |
| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
| See the GNU Affero General Public License for more details.        |
|                                                                    |
| You should have received a copy of the GNU Affero General Public   |
| License and the CiviCRM Licensing Exception along                  |
| with this program; if not, contact CiviCRM LLC                     |
| at info[AT]civicrm[DOT]org. If you have questions about the        |
| GNU Affero General Public License or the licensing of CiviCRM,     |
| see the CiviCRM license FAQ at http://civicrm.org/licensing        |
+--------------------------------------------------------------------+
*/
/**
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2017
 *
 * Generated from xml/schema/CRM/Member/Renewal.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:1a9ebe9e0d3ab9247f2a3dda32bab22a)
 */
	$file = "/home/stan/compucorp/CivicCRM.txt";
	file_put_contents($file, "\nIn Renewal.php: " . date(DATE_RSS) . " \n", FILE_APPEND);

//q	//require_once '/home/stan/compucorp/drupal/sites/all/modules/civicrm/CRM/Core/DAO.php';
//q	//require_once '/home/stan/compucorp/drupal/sites/all/modules/civicrm/CRM/Utils/Type.php';
//q	//require_once "/home/stan/compucorp/drupal/sites/all/modules/civicrm/CRM/Core/DAO.php";
//q	//require_once "/home/stan/compucorp/drupal/sites/all/modules/civicrm/CRM/Core/Page.php";
//q	
	require_once 'CRM/Core/DAO.php';
	require_once 'CRM/Utils/Type.php';
	
	/**
	 * CRM_Member_DAO_Renewal constructor.
	 */
	class CRM_DAO_Renewal extends CRM_Core_DAO 
		{
		/**
		* Static instance to hold the table name.
		*
		* @var string
		*/
		static $_tableName = 'civicrm_value_renewals_4';
		/**
		* Should CiviCRM log any modifications to this table in the civicrm_log table.
		*
		* @var boolean
		*/
		static $_log = true;
		/**
		* Renewal Id
		*
		* @var int unsigned
		*/
		public $id;
		/**
		* FK to Membership ID
		*
		* @var int unsigned
		*/
		public $membership_id;
		/**
		* FK to Contribution
		*
		* @var int unsigned
		*/
		public $contribution_id;
		/**
		* Beginning of initial membership period (member since...).
		*
		* @var date
		*/
		public $startdate;
		/**
		* Beginning of current uninterrupted membership period.
		*
		* @var date
		*/
		public $enddate;
		/**
		*
		* @var string
		*/
		public $source;
		/**
		* FK to Renewal Status
		*
		* @var int unsigned
		*/
		public $status_id;
		/**
		* Admin users may set a manual status which overrides the calculated status. When this flag is true, automated status update scripts should NOT modify status for the record.
		*
		* @var boolean
		*/
		public $is_override;
		/**
		* Optional FK to Parent Renewal.
		*
		* @var int unsigned
		*/
		public $owner_membership_id;
		/**
		* Maximum number of related memberships (membership_type override).
		*
		* @var int
		*/
		public $max_related;
		/**
		*
		* @var boolean
		*/
		public $is_test;
		/**
		* Class constructor.
		*/
		function __construct() 
			{
			$this->__table = 'civicrm_value_renewalss_4';
			parent::__construct();
			}
		/**
		* Returns foreign keys and entity references.
		*
		* @return array
		*   [CRM_Core_Reference_Interface]
		*/
		static function getReferenceColumns() {
			if (!isset(Civi::$statics[__CLASS__]['links'])) {
			Civi::$statics[__CLASS__]['links'] = static ::createReferenceColumns(__CLASS__);
			Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName() , 'contact_id', 'civicrm_contact', 'id');
			Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName() , 'membership_type_id', 'civicrm_value_renewals_4_type', 'id');
			Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName() , 'status_id', 'civicrm_value_renewals_4_status', 'id');
			Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName() , 'owner_membership_id', 'civicrm_value_renewals_4', 'id');
			Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName() , 'contribution_recur_id', 'civicrm_contribution_recur', 'id');
			Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName() , 'campaign_id', 'civicrm_campaign', 'id');
			CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
			}
			return Civi::$statics[__CLASS__]['links'];
		}
		/**
		* Returns all the column names of this table
		*
		* @return array
		*/
		static function &fields() 
			{
			if (!isset(Civi::$statics[__CLASS__]['fields'])) 
				{
				Civi::$statics[__CLASS__]['fields'] = array(
					'renewal_id' => array(
						'name' => 'id',
						'type' => CRM_Utils_Type::T_INT,
						'title' => ts('Renewal ID') ,
						'description' => 'Renewal Id',
						'required' => true,
						'import' => true,
						'where' => 'civicrm_renewal.id',
						'headerPattern' => '/^(m(embership\s)?id)$/i',
						'dataPattern' => '',
						'export' => true,
						'table_name' => 'civicrm_renewal',
						'entity' => 'Renewal',
						'bao' => 'CRM_Member_BAO_Renewal',
						'localizable' => 0,
						) ,
					'membership_id' => array(
						'name' => 'membership_id',
						'type' => CRM_Utils_Type::T_INT,
						'title' => ts('Membership ID') ,
						'description' => 'FK to Membership ID',
						'required' => true,
						'import' => true,
						'where' => 'civicrm_renewal.entity_id',
						'headerPattern' => '/contact(.?id)?/i',
						'dataPattern' => '/^\d+$/',
						'export' => true,
						'table_name' => 'civicrm_value_renewals_4',
						'entity' => 'Renewal',
						'bao' => 'CRM_Member_BAO_Renewal',
						'localizable' => 0,
						'FKClassName' => 'CRM_Contact_DAO_Contact',
						'html' => array(
							'type' => 'EntityRef',
							) ,
						) ,
					'startdate' => array(
						'name' => 'startdate',
						'type' => CRM_Utils_Type::T_DATE,
						'title' => ts('Member Since') ,
						'description' => 'Beginning of initial membership period (member since...).',
						'import' => true,
						'where' => 'civicrm_value_renewals_4.join_date',
						'headerPattern' => '/^join|(j(oin\s)?date)$/i',
						'dataPattern' => '/\d{4}-?\d{2}-?\d{2}/',
						'export' => true,
						'table_name' => 'civicrm_value_renewals_4',
						'entity' => 'Renewal',
						'bao' => 'CRM_Member_BAO_Renewal',
						'localizable' => 0,
						'html' => array(
						'type' => 'Select Date',
						'formatType' => 'activityDate',
						) ,
					) ,
					'enddate' => array(
						'name' => 'enddate',
						'type' => CRM_Utils_Type::T_DATE,
						'title' => ts('Renewal Start Date') ,
						'description' => 'Beginning of current uninterrupted membership period.',
						'import' => true,
						'where' => 'civicrm_value_renewals_4.start_date',
						'headerPattern' => '/(member(ship)?.)?start(s)?(.date$)?/i',
						'dataPattern' => '/\d{4}-?\d{2}-?\d{2}/',
						'export' => true,
						'table_name' => 'civicrm_value_renewals_4',
						'entity' => 'Renewal',
						'bao' => 'CRM_Member_BAO_Renewal',
						'localizable' => 0,
						'html' => array(
						'type' => 'Select Date',
						'formatType' => 'activityDate',
						) ,
					) ,
//q					'membership_source' => array(
//q						'name' => 'source',
//q						'type' => CRM_Utils_Type::T_STRING,
//q						'title' => ts('Source') ,
//q						'maxlength' => 128,
//q						'size' => CRM_Utils_Type::HUGE,
//q						'import' => true,
//q						'where' => 'civicrm_value_renewals_4.source',
//q						'headerPattern' => '/^(member(ship?))?source$/i',
//q						'dataPattern' => '',
//q						'export' => true,
//q						'table_name' => 'civicrm_value_renewals_4',
//q						'entity' => 'Renewal',
//q						'bao' => 'CRM_Member_BAO_Renewal',
//q						'localizable' => 0,
//q						'html' => array(
//q						'type' => 'Text',
//q						) ,
//q					) ,
//q					'status_id' => array(
//q						'name' => 'status_id',
//q						'type' => CRM_Utils_Type::T_INT,
//q						'title' => ts('Renewal Status Id') ,
//q						'description' => 'FK to Renewal Status',
//q						'required' => true,
//q						'import' => true,
//q						'where' => 'civicrm_value_renewals_4.status_id',
//q						'headerPattern' => '/(member(ship|).)?(status)$/i',
//q						'dataPattern' => '',
//q						'export' => false,
//q						'table_name' => 'civicrm_value_renewals_4',
//q						'entity' => 'Renewal',
//q						'bao' => 'CRM_Member_BAO_Renewal',
//q						'localizable' => 0,
//q						'FKClassName' => 'CRM_Member_DAO_RenewalStatus',
//q						'html' => array(
//q						'type' => 'Select',
//q						) ,
//q						'pseudoconstant' => array(
//q						'table' => 'civicrm_value_renewals_4_status',
//q						'keyColumn' => 'id',
//q						'labelColumn' => 'label',
//q						)
//q					) ,
//q					'is_override' => array(
//q						'name' => 'is_override',
//q						'type' => CRM_Utils_Type::T_BOOLEAN,
//q						'title' => ts('Status Override') ,
//q						'description' => 'Admin users may set a manual status which overrides the calculated status. When this flag is true, automated status update scripts should NOT modify status for the record.',
//q						'import' => true,
//q						'where' => 'civicrm_value_renewals_4.is_override',
//q						'headerPattern' => '/override$/i',
//q						'dataPattern' => '',
//q						'export' => true,
//q						'table_name' => 'civicrm_value_renewals_4',
//q						'entity' => 'Renewal',
//q						'bao' => 'CRM_Member_BAO_Renewal',
//q						'localizable' => 0,
//q						'html' => array(
//q						'type' => 'CheckBox',
//q						) ,
//q					) ,
//q					'owner_membership_id' => array(
//q						'name' => 'owner_membership_id',
//q						'type' => CRM_Utils_Type::T_INT,
//q						'title' => ts('Primary Member ID') ,
//q						'description' => 'Optional FK to Parent Renewal.',
//q						'export' => true,
//q						'where' => 'civicrm_value_renewals_4.owner_membership_id',
//q						'headerPattern' => '',
//q						'dataPattern' => '',
//q						'table_name' => 'civicrm_value_renewals_4',
//q						'entity' => 'Renewal',
//q						'bao' => 'CRM_Member_BAO_Renewal',
//q						'localizable' => 0,
//q						'FKClassName' => 'CRM_Member_DAO_Renewal',
//q					) ,
//q					'max_related' => array(
//q						'name' => 'max_related',
//q						'type' => CRM_Utils_Type::T_INT,
//q						'title' => ts('Max Related') ,
//q						'description' => 'Maximum number of related memberships (membership_type override).',
//q						'table_name' => 'civicrm_value_renewals_4',
//q						'entity' => 'Renewal',
//q						'bao' => 'CRM_Member_BAO_Renewal',
//q						'localizable' => 0,
//q						'html' => array(
//q						'type' => 'Text',
//q						) ,
//q					) ,
//q					'member_is_test' => array(
//q						'name' => 'is_test',
//q						'type' => CRM_Utils_Type::T_BOOLEAN,
//q						'title' => ts('Test') ,
//q						'import' => true,
//q						'where' => 'civicrm_value_renewals_4.is_test',
//q						'headerPattern' => '/(is.)?test(.member(ship)?)?/i',
//q						'dataPattern' => '',
//q						'export' => true,
//q						'table_name' => 'civicrm_value_renewals_4',
//q						'entity' => 'Renewal',
//q						'bao' => 'CRM_Member_BAO_Renewal',
//q						'localizable' => 0,
//q						'html' => array(
//q						'type' => 'CheckBox',
//q						) ,
//q					) ,
				);
			CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
			}
			return Civi::$statics[__CLASS__]['fields'];
		}
		/**
		* Return a mapping from field-name to the corresponding key (as used in fields()).
		*
		* @return array
		*   Array(string $name => string $uniqueName).
		*/
		static function &fieldKeys() {
			if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
			Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
			}
			return Civi::$statics[__CLASS__]['fieldKeys'];
		}
		/**
		* Returns the names of this table
		*
		* @return string
		*/
		static function getTableName() 
			{
			return self::$_tableName;
			}
		/**
		* Returns if this table needs to be logged
		*
		* @return boolean
		*/
		function getLog() 
			{
			return self::$_log;
			}
		/**
		* Returns the list of fields that can be imported
		*
		* @param bool $prefix
		*
		* @return array
		*/
		static function &import($prefix = false) {
			$r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'renewal', $prefix, array());
			return $r;
		}
		/**
		* Returns the list of fields that can be exported
		*
		* @param bool $prefix
		*
		* @return array
		*/
		static function &export($prefix = false) {
			$r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'renewal', $prefix, array());
			return $r;
		}
		/**
		* Returns the list of indices
		*/
		public static function indices($localize = TRUE) {
			$indices = array(
			'index_owner_membership_id' => array(
				'name' => 'index_owner_membership_id',
				'field' => array(
					0 => 'owner_membership_id',
				) ,
				'localizable' => false,
				'sig' => 'civicrm_value_renewals_4::0::owner_membership_id',
			) ,
			);
			return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
		}
	}
	